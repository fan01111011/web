projects = '[{"project_name" : "A control system for an inflatable vaginal dilator (Pending US patent)", "key_words": " C/C++, Embedded Medical System, Analog and Digital Circuit Design, Soldering, 3D print", "detail": "*This is a medical system to relieve the effect of vaginal stenosis caused by pelvic radiation therapy <br/> *An Arduino Mega 2560 board was used to collect the data and control the expansion of the dilator <br/> *A user-friendly interface was designed to guide medical doctors and patients in using the system"}, {"project_name" : "A memory-efficient on-device training library for embedded systems", "key_words": "C/C++, Embedded System Design, Machine Learning, TinyML", "detail": "*This library stores data at the bitwise level to reduce memory consumption (8x to 200x smaller) <br/>*On-device training is enabled to adapt new incoming data due to the low usage of memory <br/>*This library also allows users to use SD cards as virtual memory to store extremely large model"}, {"project_name" : "LoRa communication platform", "key_words": "C/C++, Embedded System Design, RaspberryPi, IoT, LoRa Communication Platform", "detail": "*Set up a RAK5146 LoRa Gateway with the ChirpStack operating system <br/>*Collected data was encoded on the client nodes, and then transferred to the Gateway via the LoRa Network <br/>*Received data would be first decoded by the Gateway, then forwarded to an HTTP server"}, {"project_name" : "EDD tissue heat transfer experience", "key_words": "C/C++, Embedded Medical System, Sensor Array, Control Theory ", "detail": "*This study aimed to avoid esophageal thermal damage that can occur during cardiac ablation <br/>*A Matlab GUI has been implemented to collect the data and control the heater with PID theory <br/>*Reduced the size (105.7cm3 to 0.6cm3) and temperature variation (±3℃ to ±0.3℃) of the heater <br/>*Designed and tested the experiment independently and ran the formal experiment with PI "}, {"project_name" : "Simplified Bitcoin Hasing on FPGA", "key_words": "SystemVerilog, FPGA, Parallel Computing, Hardware Acceleration", "detail": "*Implemented and optimized simplified SHA-256 algorithm using SystemVerilog <br/>*Deployed 8 paralleled simplified SHA-256 instances for Bitcoin hashing <br/>*Computation cycles reduced from 2000 to 388 <br/>*Compiled the design using Intel Quartus on Arria II GX EP2AGX45DF29I5 <br/>*Simulated and verified the design using ModelSim "}, {"project_name" : "Array Multiplication Accelerator Chip", "key_words": "Verilog, Digital Circuit Design, ASIC, VLSI, Hardware Acceleration", "detail": "*Implemented a Dual-core array multiplication accelerator behavioral code using Verilog <br/>*Went over all of the ASIC design processes before tapeout (Synthesis, PnR, and RTL Simulation…) <br/>*Applied pipelining, Muticycle Path to reduce the WNS <br/>*The chip can take 4bits or 8bits as well as signed and unsigned data as input <br/>*The core configuration function enables the user to use only one core to reduce the power consumption"}, {"project_name" : "CUDA Q-learning Pathfinding Program", "key_words": "CUDA, Parallel Computing, Q-learning, Hardware Acceleration", "detail": "*Implemented a function to let an agent find one safe path on a map of minesweeper <br/> *The behavior of the agent was decided by a Q-learning function <br/>*128 CUDA threads were used to simulate 128 agents to accelerate the pathfinding process"}, {"project_name" : "Bluetooth Game Controller", "key_words": "C/C++, Python, Embedded System Design, Bluetooth Communication", "detail": "*Adafruit ESP32 Feather was used as the fundamental microcontroller of the game controller  <br/>*Edited game “Space Invaders” based on the “Pygame” library to receive the command from the game controller  <br/> *The game on PC and the controller communicated through Bluetooth <br/>*Functions of common game controllers like vibration when hit, change of moving speed, etc has been implemented <br/> *An OLED screen the on game controller displays information about the game eg, the Game Score, and the HP of the Player"}]';